# -*- coding: utf-8 -*-
"""
Created on Sat May 11 22:34:17 2019

@author: DIPANSHU VERMA
"""
#import requests
#import pandas as pd
#import matplotlib.pyplot as plt
#from sklearn import linear_model
#raw = pd.read_excel('Instant Raw Report (11).xlsx')
#complains = pd.read_excel('Street light Complaint Details last 6 Month.xlsx')
#regr=linear_model.LinearRegression()
#names=list(complains['District'])
d = {}
lats=[]
lons=[]
'''
for name in names:
    d[name] = d.get(name, 0) + 1
'''
c={'VARANASI': 2210, 'AHMEDABAD': 14, 'VALSAD': 680, 'ANAND': 1942, 'KHEDA': 986, 'AGRA': 4845, 'RANCHI': 897, 'MEDCHAL': 187, 'SURAT': 154, 'CHANDIGARH': 3369, 'NASHIK': 5, 'SOUTH DELHI': 52354, 'KANPUR NAGAR': 8595, 'CHITTOOR': 140, 'ANANTAPUR': 541, 'GANDHINAGAR': 759, 'WEST DELHI': 1, 'HYDERABAD': 18516, 'MORADABAD': 746, 'RANGA REDDY': 576, 'KARIMNAGAR': 432, 'PRAKASAM': 811, 'KURNOOL': 687, 'EAST GODAVARI': 93, 'GUNTUR': 1572, 'KADAPA': 16, 'KRISHNA': 1369, 'SRIKAKULAM': 17, 'VIZIANAGARAM': 26, 'VISAKHAPATNAM': 36, 'WEST GODAVARI': 21, 'VADODARA': 2, 'BHAVNAGAR': 9, 'JUNAGADH': 12, 'PANCHMAHAL': 27, 'JAMNAGAR': 6, 'KUTCH': 10, 'MEHSANA': 23, 'SURENDRANAGAR': 14, 'BHARUCH': 44, 'AMRELI DISTRICT': 18, 'PATAN': 3, 'NAVSARI': 8, 'GIR SOMNATH': 56, 'MAHISAGAR': 1, 'TAPI': 124, 'PORBANDAR': 1, 'RAJKOT': 2, 'BANASKANTHA': 10, 'JAIPUR': 2, 'JODHPUR': 1, 'ALWAR': 2, 'NAGAUR': 1, 'UDAIPUR': 7, 'BHARATPUR': 1, 'BIKANER': 1, 'JHUNJHUNU': 2, 'BILASPUR': 566, 'RAJNANDGAON': 201, 'KORBA': 1927, 'DHAMTARI': 67, 'NORTH GOA': 256, 'SOUTH GOA': 398, 'MEERUT': 8128, 'WARANGAL URBAN': 604, 'JANGAON': 5, 'JAYASHANKAR(BHUPALPALLY)': 91, 'WARANGAL RURAL': 186, 'MAHBUBNAGAR': 529, 'RAJANNA': 101, 'PEDDAPALLI': 70, 'JAGITYAL': 15, 'SIDDIPET': 29, 'NALGONDA': 542, 'SURYAPET': 302, 'YADADRI': 15, 'ADILABAD': 237, 'BHADRADRI': 121, 'GOGOLAMBA': 63, 'KAMAREDDY': 17, 'KHAMMAM': 409, 'KOMARAM BHEEM': 60, 'MANCHERIAL': 100, 'MEDAK': 43, 'NAGARKURNOOL': 19, 'NIRMAL': 48, 'NIZAMABAD': 154, 'SANGAREDDY': 37, 'VIKARABAD': 45, 'WANAPARTHY': 40, 'MAHABUBABAD': 26, 'NELLORE': 1273, 'LUCKNOW': 6884, 'ALLAHABAD': 439, 'DEOGHAR': 68, 'DHANBAD': 1907, 'DUMKA': 13, 'HAZARIBAG': 2, 'JAMSHEDPUR': 888, 'MEDINAGAR': 10, 'SAHIBGANJ': 2, 'RAMGARH': 7, 'CHAMBA': 3, 'HAMIRPUR': 1, 'KANGRA': 4, 'KULLU': 1, 'MANDI': 177, 'SHIMLA': 326, 'SIRMAUR': 12, 'PORT BLAIR': 37, 'FIROZABAD': 2020, 'MATHURA': 2813, 'JHANSI': 343, 'RATLAM': 679, 'BAREILLY': 302, 'ALIGARH': 276, 'BHOJPUR': 18, 'GORAKHPUR': 2811, 'GHAZIABAD': 164, 'MUNGELI': 12, 'BALOD': 6, 'BEMETARA': 12, 'BHILAI': 1802, 'KUMHARI': 3, 'DONGARGARH': 1, 'FAIZABAD': 141, 'GURGAON': 1121, 'PATIALA': 3841, 'LUDHIANA': 144, 'JALANDHAR': 331, 'HATHRAS (MAHAMAYA NAGAR)': 650, 'RAIPUR': 4507, 'BALRAMPUR': 5, 'BALODA BAZAR': 14, 'BASTAR': 23, 'BIJAPUR': 3, 'DURG': 2639, 'GARIABAND': 20, 'JANJGIR-CHAMPA': 8, 'JANJGIR NAILA': 4, 'JASHPUR': 4, 'KANKER': 10, 'KONDAGAON': 9, 'KORIYA': 246, 'MAHASAMUND': 73, 'RAIGARH': 726, 'SURAJPUR': 9, 'KABIRDHAM': 19, 'BHATAPARA': 32, 'JAGDALPUR': 91, 'SARGUJA': 45, 'REWA': 11, 'CHANDRAPUR': 35, 'AMRAVATI': 4, 'WARDHA': 2, 'LATUR': 1, 'BEED': 1, 'PARBHANI': 1, 'BULDHANA': 2, 'LAKHIMPUR KHERI': 3, 'BAHRAICH': 1, 'RAEBARELI': 2, 'PALGHAR': 1, 'JALGAON': 1, 'SOLAPUR': 1, 'MIRZAPUR': 3, 'JAUNPUR DISTRICT': 15, 'GHAZIPUR': 3, 'BALLIA': 4, 'HOSHIARPUR': 296, 'PATHANKOT': 13, 'SRI MUKTSAR SAHIB': 277, 'SANGRUR': 11, 'PATNA': 8, 'MUZAFFARPUR': 2}
counts=list(c.values())
'''for i in c.keys():
    try:
        resp = requests.get('https://nominatim.openstreetmap.org/search?q='+i+'&format=json')
        print(i)
        lats.append(float(resp.json()[0]['lat']))
        lons.append(float(resp.json()[0]['lon']))
    except IndexError:
        pass
lats=tuple(lats)
lons=tuple(lons)
'''
lats=(25.3356491,
 23.0216238,
 20.43225385,
 22.5584995,
 22.75,
 27.1752554,
 23.3700354,
 17.6339929,
 21.1864607,
 30.7194022,
 20.216667,
 28.48555995,
 26.43800785,
 13.30374115,
 14.55,
 23.2232877,
 28.6479519,
 17.3616079,
 28.8334982,
 17.5472222,
 18.4346438,
 15.5,
 15.8309251,
 17.233496,
 16.2915189,
 14.4671491,
 16.6691525,
 18.2949396,
 18.1154979,
 17.7231276,
 17.0,
 22.297076,
 21.7718836,
 21.25,
 22.25,
 38.910548,
 34.849107,
 22.75,
 21.75,
 21.29162,
 27.6767339,
 20.952407,
 20.8907001,
 23.190415,
 21.1783994,
 21.6409,
 22.3045769,
 26.916194,
 26.2967719,
 27.5,
 27.0237969,
 24.578721,
 27.680672,
 28.0159286,
 28.1287995,
 22.0785627,
 20.9714688,
 22.51976955,
 20.7083903,
 15.5384263,
 15.1163849,
 28.9963296,
 18.0266492,
 17.7499292,
 18.4381466,
 17.9507285,
 16.7434697,
 18.4535372,
 18.6277217,
 18.7824305,
 18.01020225,
 16.8587974,
 17.078486,
 17.42902305,
 19.6759452,
 17.71239695,
 18.326621,
 17.2465351,
 18.8761795,
 17.9477615,
 16.4155705,
 19.0984578,
 18.6732693,
 17.85570175,
 17.27234825,
 16.2710395,
 17.71095735,
 14.4493717,
 26.8381,
 25.4381302,
 24.4904945,
 23.7952809,
 24.2696496,
 24.0,
 22.8015194,
 25.03329485,
 23.69167615,
 32.5,
 25.7875002,
 32.166667,
 31.9578974,
 31.6451913,
 31.1041526,
 30.75,
 11.6645348,
 27.1527986,
 27.4955539,
 25.4502464,
 23.583333,
 28.3523609,
 27.8815412,
 25.25,
 26.916667,
 28.711241,
 22.24527095,
 20.73218365,
 21.6783969,
 21.2120677,
 21.8761569,
 21.1884868,
 26.75,
 28.4646148,
 30.2389556,
 30.9090157,
 31.3323762,
 20.6985098,
 23.62456775,
 21.57264595,
 19.44566365,
 18.7676688,
 21.44201085,
 20.43112595,
 21.9671264,
 22.0229287,
 22.7702329,
 20.1270026,
 19.706655,
 23.439696,
 21.27497955,
 22.06266995,
 23.35151515,
 22.1158784,
 21.7707004,
 19.0870758,
 24.75,
 20.0,
 21.15785775,
 20.4355888,
 18.3983393,
 18.9904059,
 19.262469,
 20.583333,
 27.946309,
 27.75,
 19.74693655,
 21.0137606,
 17.6715272,
 25.1461346,
 25.75,
 25.5,
 25.833333,
 31.5328523,
 32.30598065,
 30.4692,
 30.21300815,
 25.6093239,
 26.1182898)
lons =(83.0076292,
 72.5797068,
 73.1480307506941,
 72.9625629,
 72.833333,
 78.0098161,
 85.3250132,
 78.4843146,
 72.8081281,
 76.7646552,
 74.083333,
 77.1944650484563,
 80.2658626865862,
 78.9877010160408,
 77.416667,
 72.6492267,
 77.0855654108861,
 78.4746286,
 78.7732864,
 78.6638889,
 79.1322648,
 79.5,
 78.0425373,
 81.7225986,
 80.4541588,
 78.8228877,
 80.7190024,
 83.893875,
 83.3978806,
 83.3012842,
 81.166667,
 73.1957373,
 72.1416449,
 70.333333,
 70.0,
 -103.8693974,
 32.706751,
 71.666667,
 73.0,
 71.2190531898532,
 85.316805,
 72.9323831,
 70.4025266,
 73.6611129947598,
 75.4435873,
 69.611,
 70.802161,
 75.820349,
 73.0351433,
 76.5,
 74.2037201,
 73.6862571,
 84.430817,
 73.3171367,
 75.3992581,
 82.1476475,
 80.6908767121225,
 82.6295146241682,
 81.5485253,
 73.8219712810048,
 73.9485718822083,
 77.7061915,
 79.4646608471909,
 79.2512368377393,
 79.8684969,
 79.8216770511937,
 77.9923773,
 78.7619423265253,
 79.4987544679383,
 78.8872644,
 78.8987095519744,
 79.2125049550569,
 79.7861591417365,
 79.0885487926838,
 78.5339895,
 80.5718746309346,
 78.0485863695941,
 80.1500326,
 79.4449696,
 78.2069098350751,
 78.6557316381859,
 78.3643058438223,
 78.0978477,
 77.8336041163057,
 77.7493259906387,
 77.9931634907935,
 80.0372679620673,
 79.9873763,
 80.9346001,
 81.8338005,
 86.6977106,
 86.4309638,
 87.2497712,
 85.25,
 86.2029579,
 87.68559161053,
 85.5166102349669,
 76.5,
 79.823540274675,
 76.25,
 77.1089232,
 76.9952947429661,
 77.1709729,
 77.5,
 92.7390448,
 78.3991439,
 77.6855554,
 78.5800085,
 75.166667,
 79.4096542,
 78.0690216,
 84.25,
 83.25,
 77.4445372,
 81.6536224845437,
 81.1433573836504,
 81.4304762283333,
 81.3732849,
 80.1871349,
 80.7560121,
 82.0,
 77.0299194,
 76.3309372129232,
 75.851601,
 75.576889,
 82.1602584107996,
 83.4798137547256,
 82.2986484569067,
 81.4828168480163,
 80.7396969420071,
 81.3998353339245,
 82.2449019607803,
 82.6647242496104,
 82.565318,
 83.9680734898871,
 80.9802409989194,
 81.7413922497286,
 82.3096780556843,
 82.8453452426562,
 83.3049639590841,
 82.9729027266501,
 81.24454117835,
 81.8126141,
 82.0235715,
 81.5,
 80.0,
 77.6371856782136,
 78.6463504,
 76.562087,
 75.7542291,
 76.7718,
 76.416667,
 80.7815166,
 81.75,
 73.037837883053,
 75.5627048,
 75.8975502,
 82.5689952,
 82.75,
 83.5,
 84.166667,
 75.9025485,
 75.6440044628136,
 74.5182,
 75.8248477164425,
 85.1235252,
 85.3857888)
import gmplot
#Set different latitude and longitude points
#declare the center of the map, and how much we want the map zoomed in
gmap = gmplot.GoogleMapPlotter(25.3616, 78.4747, 5)
# Scatter map
gmap.scatter( lats, lons, '#FF0000',size = 50, marker = True ,titles=counts)
#gmap.plot(lats, lons, 'cornflowerblue', edge_width = 3.0)
#gmap4 = gmplot.GoogleMapPlotter.from_geocode("Dehradun, India") 
  
# heatmap plot heating Type 
# points on the Google map 
gmap.heatmap( lats, lons ) 
# Plot method Draw a line in between given coordinates
#Your Google_API_Key

# save it to html
gmap.draw("\templates\plot.html")

    